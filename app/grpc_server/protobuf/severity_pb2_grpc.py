# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import severity_pb2 as severity__pb2


class SeverityStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSeverityByHierarchyId = channel.unary_unary(
                '/severity.Severity/GetSeverityByHierarchyId',
                request_serializer=severity__pb2.ListHierarchyId.SerializeToString,
                response_deserializer=severity__pb2.ListSeverityHierarchyIdResponse.FromString,
                )
        self.GetSeverityByNodeId = channel.unary_unary(
                '/severity.Severity/GetSeverityByNodeId',
                request_serializer=severity__pb2.ListNodeId.SerializeToString,
                response_deserializer=severity__pb2.ListSeverityNodeIdResponse.FromString,
                )
        self.GetMoIdsOfHierarchy = channel.unary_unary(
                '/severity.Severity/GetMoIdsOfHierarchy',
                request_serializer=severity__pb2.ListHierarchyId.SerializeToString,
                response_deserializer=severity__pb2.ListOfHierarchiesMoIds.FromString,
                )
        self.GetMoIdsOfHierarchyBranch = channel.unary_unary(
                '/severity.Severity/GetMoIdsOfHierarchyBranch',
                request_serializer=severity__pb2.ListNodeId.SerializeToString,
                response_deserializer=severity__pb2.ListOfNodesMoIds.FromString,
                )
        self.GetChildNodesOfParentIdWithFilterCondition = channel.unary_unary(
                '/severity.Severity/GetChildNodesOfParentIdWithFilterCondition',
                request_serializer=severity__pb2.RequestNodesWithCondition.SerializeToString,
                response_deserializer=severity__pb2.ResponseNodesWithCondition.FromString,
                )


class SeverityServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSeverityByHierarchyId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSeverityByNodeId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMoIdsOfHierarchy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMoIdsOfHierarchyBranch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChildNodesOfParentIdWithFilterCondition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SeverityServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSeverityByHierarchyId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSeverityByHierarchyId,
                    request_deserializer=severity__pb2.ListHierarchyId.FromString,
                    response_serializer=severity__pb2.ListSeverityHierarchyIdResponse.SerializeToString,
            ),
            'GetSeverityByNodeId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSeverityByNodeId,
                    request_deserializer=severity__pb2.ListNodeId.FromString,
                    response_serializer=severity__pb2.ListSeverityNodeIdResponse.SerializeToString,
            ),
            'GetMoIdsOfHierarchy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMoIdsOfHierarchy,
                    request_deserializer=severity__pb2.ListHierarchyId.FromString,
                    response_serializer=severity__pb2.ListOfHierarchiesMoIds.SerializeToString,
            ),
            'GetMoIdsOfHierarchyBranch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMoIdsOfHierarchyBranch,
                    request_deserializer=severity__pb2.ListNodeId.FromString,
                    response_serializer=severity__pb2.ListOfNodesMoIds.SerializeToString,
            ),
            'GetChildNodesOfParentIdWithFilterCondition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChildNodesOfParentIdWithFilterCondition,
                    request_deserializer=severity__pb2.RequestNodesWithCondition.FromString,
                    response_serializer=severity__pb2.ResponseNodesWithCondition.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'severity.Severity', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Severity(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSeverityByHierarchyId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/severity.Severity/GetSeverityByHierarchyId',
            severity__pb2.ListHierarchyId.SerializeToString,
            severity__pb2.ListSeverityHierarchyIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSeverityByNodeId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/severity.Severity/GetSeverityByNodeId',
            severity__pb2.ListNodeId.SerializeToString,
            severity__pb2.ListSeverityNodeIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMoIdsOfHierarchy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/severity.Severity/GetMoIdsOfHierarchy',
            severity__pb2.ListHierarchyId.SerializeToString,
            severity__pb2.ListOfHierarchiesMoIds.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMoIdsOfHierarchyBranch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/severity.Severity/GetMoIdsOfHierarchyBranch',
            severity__pb2.ListNodeId.SerializeToString,
            severity__pb2.ListOfNodesMoIds.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChildNodesOfParentIdWithFilterCondition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/severity.Severity/GetChildNodesOfParentIdWithFilterCondition',
            severity__pb2.RequestNodesWithCondition.SerializeToString,
            severity__pb2.ResponseNodesWithCondition.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
